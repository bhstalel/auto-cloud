- name: Add onlyoffice gpg keys
  apt_key:
    keyserver: "keyserver.ubuntu.com"
    id: "8320CA65CB2DE8E5"
    state: present
  become: yes

- name: Add onlyoffice repositories
  apt_repository:
    repo: "{{ package_repo }}"
    state: present
  become: yes

- name: Add debian contrib repositories
  apt_repository:
    repo: "{{ debian_repo }}"
    state: present
  when: ansible_distribution == "Debian"
  become: yes

- name: Say 'yes' to ttf-mscorefonts-installer
  debconf:
    name: ttf-mscorefonts-installer
    question: msttcorefonts/accepted-mscorefonts-eula
    value: true
    vtype: boolean
  become: yes
    
- name: Accept license
  debconf:
    name: "{{ package_name }}"
    question: onlyoffice/accepted-onlyoffice-license
    value: 'true'
    vtype: boolean

- name: Install postgresql
  apt:
    name: "postgresql"
    state: present
    update_cache: yes
  become: yes

- name: Create nextcloud user in postgresql
  shell: sudo -u postgres psql -c "CREATE USER {{onlyoffice_username}} WITH password '{{onlyoffice_userpass}}'";
  become: yes
  register: out
  failed_when: out.rc != 0 and 'already exists' not in out.stderr

- name: Create database for nextcloud
  shell: sudo -u postgres psql -c "CREATE DATABASE onlyoffice WITH owner '{{onlyoffice_username}}';";
  become: yes
  register: out
  failed_when: out.rc != 0 and 'already exists' not in out.stderr    

- name: Set up db host name
  debconf:
    name: "{{ package_name }}"
    question: onlyoffice/db-host
    value: "localhost"
    vtype: string

- name: Set up db name
  debconf:
    name: "{{ package_name }}"
    question: onlyoffice/db-name
    value: "onlyoffice"
    vtype: string

- name: Set up db user
  debconf:
    name: "{{ package_name }}"
    question: onlyoffice/db-user
    value: "{{ onlyoffice_username }}"
    vtype: string
  when: onlyoffice_username != ""

- name: Set up db user password
  debconf:
    name: "{{ package_name }}"
    question: onlyoffice/db-pwd
    value: "{{ onlyoffice_userpass }}"
    vtype: password
  when: onlyoffice_userpass != ""

- name: Install documentserver
  apt: 
    name: "{{ package_name }}"
    update_cache: yes
    state: latest
  become: yes

- name: Creating SSL folder
  shell: mkdir /var/www/onlyoffice/ssl
  become: yes

- name: Copying SSLCertificate file
  template:
    src: "{{autocloud_dir}}/ssl/onlyoffice.crt"
    dest: "/var/www/onlyoffice/ssl/onlyoffice.crt"
  become: yes

- name: Copying SSLCertificateKey file
  template:
    src: "{{autocloud_dir}}/ssl/onlyoffice.key"
    dest: "/var/www/onlyoffice/ssl/onlyoffice.key"
  become: yes

- name: Set up redis host name
  shell: "{{ json }} -I -e 'this.services.CoAuthoring.redis.host  = \"{{ redis_server_host }}\"'"
  when: redis_server_host != ""
  notify: restart-ds

- name: Set up redis port number
  shell: "{{ json }} -I -e 'this.services.CoAuthoring.redis.port  = \"{{ redis_server_port }}\"'"
  when: redis_server_port != ""
  notify: restart-ds

- name: Set up rabbitmq url
  shell: "{{ json }} -I -e 'this.rabbitmq.url = \"{{ rabbitmq_server_url }}\"'"
  when: rabbitmq_server_url != ""
  notify: restart-ds

- name: Setting up Nginx Configuration
  template:
    src: "{{autocloud_dir}}/roles/l-oo-n/templates/onlyoffice-documentserver.conf"
    dest: "/etc/nginx/conf.d/onlyoffice-documentserver.conf"
  become: yes

- name: Restarting Nginx
  shell: systemctl restart nginx
  become: yes
